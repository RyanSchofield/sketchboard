(function(){"use strict";importScripts("https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js");const a=(async()=>{let t=await loadPyodide();return await t.loadPackage("micropip"),t})();class d{constructor(){this.ready=Promise.resolve()}run(s,n=(o,e)=>{}){const o=this.ready.then(async()=>{const e=await a;e.setStdout({isatty:!1,batched:i=>{n("log",i)}}),await e.runPythonAsync(s),e.setStdout({})}).catch(e=>{n("error",e.toString())});return this.ready=o,o}}const r=new d;self.onmessage=async t=>{console.log("Worker received message: %o",t);const s=t.data.requestID;t.data.kind==="run-code"&&(await r.run(t.data.code,(n,o)=>{self.postMessage({kind:"run-code-output",requestID:s,output:{type:n,line:o}})}),self.postMessage({kind:"run-code-done",requestID:s}))}})();
